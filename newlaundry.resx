<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABAAMAAAAEAAAABQAAAAAAAgAGAAAACAAAAAAAAwAJAAAAAAAEAAMBAAABAQEAAAAFAA8A
        AAARAAAAAAAHAAAACAACAgIAIgAAAAACBgAAAwMABwQAAB0DAAAOBQAAAwcIAAAGEAAdCAAAKwgAAA8K
        BgAmDAAAHg4GABQRAwANDhkALRQAABwUBwAdFA0AAAwzABETHwAUFhoAABA5AAYUKwAaGhoAHBsaABsb
        GwAAGDcAABo4ACAfHwAAGzwAKCMUAD4lDAAgISQAEh8wACAiIgA6JRIADR87ADUkHQAsJR4AFCE1ADUm
        GgA4KBoATSsKACUnJgADJUYAVS8LADIrKQBGLxYAKyozABcqPQAHKEoAACdSAEMxHAAEK1MAWDYUABgu
        RQASMUQAWjgXAA0vUQAOMFEAQzwrAGZBHwBPPTUANDtHABc5WQA+PjwAaUcmACBBYQAxQ18AIURnAEtM
        SABNTEsAJUdqAGhROQBNT08ATFFXAGZYSQBFVWEASVNoAEhXXwByW0QAUFtZAE1WbwBlYVgAP19+AF1v
        bACCdVkAgHVoAKB4VQB1dHgAbHR9AJ56WABZdJIAm39hAGN7iQB8fX4ApYJgAIx/cwBpfJQAm4ZwAKCI
        eQB0hpcAl4iGAKmPdgCNjZYArJN7ALWehADKoXgAnZ2cAG6YwQCenp4Au6SRAJOkrgC+ppsAx6qRAI+l
        wQCnqLEAwrCPAJurvgCWrcIAzLygAJS6vwDEuLcAy76nAOfKowC7w9EAxsjAAKzE3QC5yNYA3828AMjK
        0wCfye0Azs7OANvPygChy+4A1dLQANHT0wDh2M8A19XdAO3cwgDk3NMA4dvZAOfe1QDu39AAttzxAMve
        6gDb4OkA0eDvAPfl0gDH4PgA7eXcAOXl5QDw598A/O7NAMjq8ADp6ekA6evuANzq9wDu7OsA/e/hAPju
        6wD++csA6PHxANvw+QDv8PMA7vL2APHz9ADx/NgAy/X/AP327AD29fQA//nqAP/48AD/+uoA9ff5AP/4
        8wD6+PYA9vj6APb4+wD7+fcA9/n8AP/88AD2+v0A/vv3APj6/QDp+/8A/Pv5APf6/wD//PwA//73APz9
        /wD5/v4A//78AP3+/gDx//8A/P7/APT//wD1//8A///9AP///gD+//8A////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc
        3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc
        3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3KghAAAA
        AAAAAAAAAAAAAAB+3Nzc3Nzc3Nzc3Nzc3Nzc14d/gXtyOjFDPjUsKisvUazc3Nzc3Nzc3Nzc3Nzc3Nza
        3Nzc3NxYbtzbtZuXmrPc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcxE5Vxtzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc
        3Nzc3Nzc3NzBRUzD3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3ME/PcrckG1dWXS+3Nzc3Nzc3Nzc
        3Nzc3Nzc3Nzc3NzcyzBApmInAA9mYEfA3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc0pWRLiAmARh2sb25ndnc3Nzc
        3Nzc3Nzc3Nzc3NzctmEUDBIBAAA7lNrc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3JIaFk9oEAAAA4/c3Nzc3Nzc
        3Nzc3Nzc3Nzc3Nzc3LekNCR9kykdGQsFNrLc3Nzc3Nzc3Nzc3Nzc3Nzc3NzYZWQAa3EVOXdLG0QEetzc
        3Nzc3Nzc3Nzc3Nzc3Nzc3NVXACMzQWqi3E0TjABcvNzc3Nzc3Nzc3Nzc3Nzc3Nzc3KMAaY2g3NzEUw66
        JTKp3Nzc3Nzc3Nzc3Nzc3Nzc3NzcmQCL3Nzc3MVWBrRGHp/c3Nzc3Nzc3Nzc3Nzc3Nzc3NyWAo7c3Nzc
        x1scyEgXnNzc3Nzc3Nzc3Nzc3Nzc3Nzc3K0KiNrc3NzRiYTcKCKh3Nzc3Nzc3Nzc3Nzc3Nzc3NzcuC1z
        09zc3NzU2bsIQqvc3Nzc3Nzc3Nzc3Nzc3Nzc3NzJZ0nN3Nzc3NzcgABjv9zc3Nzc3Nzc3Nzc3Nzc3Nzc
        3NyKB57c3Nzc3Mw3CXzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3LBKUNDc3NzWbwA8p9zc3Nzc3Nzc3Nzc3Nzc
        3Nzc3Nzc3IYNcMLcpXgRH4Xc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3HUNX2xSADiC3Nvc3Nzc3Nzc3Nzc
        3Nzc3Nzc3Nzc3NzczoNeVFp5mNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3K+qrs/c3Nzc3Nzc3Nzc
        3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc
        3Nzc3Nzc3Nzc3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>